<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAgregar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAJ
        OgAACToB8GSSSgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQ7SURBVFhHxdSL
        T1NnGMfxgkBvXApSwHFTCLhCoVVuKiAKblZcWaW0XNQNGE7DaCmUbUAxk0ggUjZcUCRAxnB2TK4TfiIw
        pOIyN+OyIWHqGIgFdH8GO21CwuA9sCw5W5NPcvL0fd5+myZlrays/K+IQzrUy40StAUOaZcOcUjHPphX
        wn7HH4KCECLHzNfA8mUrSLt0iEM623bztIeuKNB0v50o5JM42DMZ4EgFpDSnoXGymUhUHcNsAFvE0b7Z
        chyfmi8TRdZEwYHJAE44RytrlcFoNhJJ66Rg+zMYwBdztKntR3DJXEsUY5SAHchggEskRyvvSEbdxAWi
        /Q0R4DIZ4CbhaBWdB1E7YSBKuBwOfqADcwGCPWyt8kYCaibKiA41icAP+hcB1n8vgdipUrifU74Zr0Tu
        59ldidSHFRPJ2sLgsYddT9pdy03kWLw+wH33GRdTXl8S8vsP0yoYSMH58XzUmAuJykdPEvfWyrkZB385
        r2lDgPics6l6Ig8XzQWM+nAkHbsU3I0BkkK+qdp8EhfvnWbUx2NyhJwgBERpeKaK8VRU3n1rS4a7ciLS
        2fVKRpIQqmRvDIjVcU3KHldsJqPHDaped2T2eSKr3wvZ/d421mfrzPqe9Qxpd60wNSEgvoxryh5wAZ2c
        AVecuuWBvCEfnB0OgmZEBO2omBKOIur57PAu5A5649S37razpDtWibOcNgYc/IhrenfIGXRy4Yozw17Q
        fReK85MHUPfgGIw/vW1T+8NRGO7FQjMWhILbnrazpDtWSbMJAXEFTl0ZrVyQqFp5ULc5I7/LG1X3pWh8
        lIb2x+/h+owGnTNFaJ3KhfGhDBWTYpzuFELVxifesypM7nhtfYAd150VxhGyxCTOPg5in2BBpDR5x4Wa
        H6PRMqVG19Ni9M9WoG+2HKYnH+DqLwpUjUsQuneHxnOncwTpnlU8ASv4bwH/gB1lW7wyQF//KAZfzGRR
        H1yKofkqDM4b0PO7Fm3T6ag2SxD9RqCaOmu/ZndTxCGBLSAxw0/f+Gs0rj/NxK35Egy/qKIY0D+nQceT
        E6j9PpLZgCS1n/7KdBS+nlUDL3QYWzRgdLESgwsafPVMgfoHEcwGJFMBLb/tRfecCncWdRhfNlAqcdtS
        hK4/FPjsoRixRxkMSMn207c/k6JvIQNjy1qYX1VQyjGyVIju52lo+jkc+44xGHAkx7f0y7kIDFjkGHv5
        Pib+1FGKMfIyH70WGZqnXkeczFdFnWUkwP6wWlja+TwIvYsJwHIa7rxSU1QYXD6Obss+XHscgKhkoTXA
        ep50zwbEIQ27+HS+rmNhO0yWnbi5FI6eJQm6lyLxzaIINywBuDotQGQiX2k9u26XFnFIw06S7JCl0HDq
        M0pcjZl6D2NWmbAhS7+9wfqs1LnUp55zMobEOB0g7NIiDrdg/Xa2n2Sd1TlphxZx+N9ZYf0Fq9LAUrhq
        tckAAAAASUVORK5CYII=
</value>
  </data>
</root>